<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Example Bean Definition -->
    <bean id="myBean" class="org.example.bean.MyBean">
       <property name="message" value="Hello, Spring default value from XML!"/>  <!-- value is default for message properties -->
    </bean>

    <!-- Example Constructor Injection -->
    <!-- First create a normal bean -->
    <bean id="specificationsBeanForConstructor" class="org.example.dependencyInjection.constructor.Specifications">
        <property name="make" value="Toyota"/>
        <property name="model" value="Corolla"/>
    </bean>
    <!-- Then pass the bean (Create a constructor in car class
    that will accept specification bean and would be provided by Xml file) -->
    <bean id="carBeanForConstructor" class="org.example.dependencyInjection.constructor.Car">
        <constructor-arg ref="specificationsBeanForConstructor"/>
    </bean>

    <!-- Example Setter Injection -->
    <bean id="specificationsBeanForSetter" class="org.example.dependencyInjection.setter.Specifications">
        <property name="make" value="BMW"/>
        <property name="model" value="M1000RR"/>
    </bean>

    <bean id="carBeanForSetter" class="org.example.dependencyInjection.setter.Car">
        <property name="specifications" ref="specificationsBeanForSetter"/>
    </bean>


    <!-- Example Inversion of control -->
    <bean id="sqlDbBean" class="org.example.IoC.UserSqlDatabase"/>
    <bean id="mongoDbBean" class="org.example.IoC.UserMongoDataBase"/>
    <bean id="userManagerBeanWithSqlDb" class="org.example.IoC.UserManager">
        <constructor-arg ref="sqlDbBean"/>
    </bean>
    <bean id="userManagerBeanWithMongoDb" class="org.example.IoC.UserManager">
        <constructor-arg ref="mongoDbBean"/>
    </bean>


</beans>